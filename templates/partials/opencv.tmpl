FROM {{ .build_image }} AS opencv-build

ENV	\
    DEBIAN_FRONTEND="noninteractive" \
    OPENCV_VERSION="{{ .opencv.version }}" \
    PYTHON_VERSION="{{ .python_version }}" \
    OPENCV_PATH="/opencv"

RUN \
{{ tmpl.Exec "python/install" | indent 4 }}
{{ tmpl.Exec "ffmpeg/ppa" | indent 4 }}
    # Install opencv build dependencies
    deps="\
      build-essential \
      ca-certificates \
      ccache \
      cmake \
      doxygen \
      ffmpeg \
      gfortran \
      git-core \
      libatlas-dev \
      libavcodec-dev \
      libavformat-dev \
      libavresample-dev \
      libdc1394-22-dev \
      libeigen3-dev \
      libfaac-dev \
      libgflags-dev \
      libgoogle-glog-dev \
      libgphoto2-dev \
      libgstreamer-plugins-base1.0-dev \
      libgstreamer1.0-dev \
      libhdf5-dev \
      libjpeg-dev \
      liblapack-dev \
      liblapacke-dev \
      libleptonica-dev \
      libmp3lame-dev \
      libopenblas-dev \
      libopencore-amrnb-dev \
      libopencore-amrwb-dev \
      libopenexr-dev \
      libopenjp2-7-dev \
      libpng-dev \
      libprotobuf-dev \
      libswscale-dev \
      libtbb-dev \
      libtesseract-dev \
      libtheora-dev \
      libtiff-dev \
      libv4l-dev \
      libvorbis-dev \
      libvtk6-dev \
      libwebp-dev \
      libx264-dev \
      libxine2-dev \
      libxvidcore-dev \
      pkg-config \
      protobuf-compiler \
      python${PYTHON_VERSION}-dev \
      unzip \
      yasm \
      zlib1g-dev \
    " && \
    apt-get install -y --no-install-recommends ${deps} && \
    # Install numpy && \
    python3 -m pip install numpy && \
    # Workaround for openblas lapacke
    # See: https://github.com/opencv/opencv/issues/9953
    ln -s /usr/include/lapacke.h /usr/include/openblas/ && \
    # Build opencv https://opencv.org
    git clone -b "${OPENCV_VERSION}" --depth 1 \
      "https://github.com/opencv/opencv.git" /tmp/opencv && \
    git clone -b "${OPENCV_VERSION}" --depth 1 \
      "https://github.com/opencv/opencv_contrib.git" /tmp/opencv/contrib && \
    mkdir -p /tmp/opencv/build && \
    cd /tmp/opencv/build && \
    cmake \
      -BUILD_SHARED_LIBS=ON \
      -DBUILD_EXAMPLES=OFF \
      -DBUILD_FAT_JAVA_LIB=OFF \
      -DBUILD_JAVA=OFF \
      -DBUILD_OBJC=OFF \
      -DBUILD_opencv_python2=OFF \
      -DBUILD_opencv_python3=ON \
      -DCMAKE_BUILD_TYPE=RELEASE \
      -DCMAKE_INSTALL_PREFIX=${OPENCV_PATH} \
      -DENABLE_CCACHE=ON \
      -DOPENCV_ENABLE_NONFREE=ON \
      -DOPENCV_EXTRA_MODULES_PATH=/tmp/opencv/contrib/modules \
      {{ if .cuda_version -}}
      -DWITH_CUDA=ON \
      -DWITH_CUBLAS=ON \
      -DWITH_CUFFT=ON \
      -DWITH_NVCUVID=ON \
      -DCUDA_FAST_MATH=1 \
      -DENABLE_FAST_MATH=ON \
      {{ end -}}
      {{- if .cudnn_version -}}
      -DWITH_CUDNN=ON \
      {{ end -}}
      -DWITH_FFMPEG=ON \
      -DWITH_OPENEXR=ON \
      -DWITH_OPENMP=ON \
      -DWITH_TBB=ON \
      /tmp/opencv \
    && \
    make -j$(nproc) && \
    make install && \
    # Cleanup
{{ tmpl.Exec "python/remove" | indent 4 }}
    apt-get remove -y ${deps} && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    truncate -s 0 /var/log/*log