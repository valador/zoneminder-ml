{{- with (ds "platform") -}}
# Code generated by gomplate; DO NOT EDIT.
# This file generated by gomplate at
# {{ (time.Now).UTC.Format time.RFC1123 }}
# using data from {{ .name }}.yaml

ARG zm_version

{{ tmpl.Exec "opencv" . }}

{{ tmpl.Exec "face_recognition" . }}

FROM zoneminder:${zm_version}-{{ .name }}

ARG zmeventnotification_version
ARG DEBIAN_FRONTEND="noninteractive"

ENV \
    ZMEVENTNOTIFICATION_VERSION="${zmeventnotification_version}" \
    OPENCV_VERSION="{{ .opencv.version }}" \
    FACE_RECOGNITION_VERSION="{{ .face_recognition.version }}" \
    PYTHON_VERSION="{{ .python_version }}"

# Copy opencv files
COPY --from=opencv-build /opencv/ /usr/local/
# Copy face_recognition files
COPY --from=face_recognition-build /face_recognition/ /usr/local/

RUN \
{{ tmpl.Exec "python/install" | indent 4 }}
    # Install dependenceis
    apt-get install -y --no-install-recommends \
{{ tmpl.Exec "opencv/deps" . | indent 6 }}
{{ tmpl.Exec "face_recognition/deps" . | indent 6 }}
      # zmeventnotification dependencies
      build-essential \
      git-core \
      libcrypt-eksblowfish-perl \
      libcrypt-mysql-perl \
      libjson-perl \
      libmodule-build-perl \
      libyaml-perl \
      wget \
    && \
    # Install perl dependencies for zmeventnotification
    perl -MCPAN -e "force install Config::IniFiles" && \
    perl -MCPAN -e "force install Crypt::Eksblowfish::Bcrypt" && \
    perl -MCPAN -e "force install Crypt::MySQL" && \
    perl -MCPAN -e "force install LWP::Protocol::https" && \
    perl -MCPAN -e "force install Net::MQTT::Simple::Auth" && \
    perl -MCPAN -e "force install Net::MQTT::Simple" && \
    perl -MCPAN -e "force install Net::WebSocket::Server" && \
    perl -MCPAN -e "force install Time::Piece" && \
    # Install zmeventnotification https://github.com/pliablepixels/zmeventnotification
    git clone --depth 1 -b "v${ZMEVENTNOTIFICATION_VERSION}" \
      "https://github.com/pliablepixels/zmeventnotification.git" \
      /tmp/zmeventnotification \
    && \
    cd /tmp/zmeventnotification && \
    ./install.sh \
      --no-interactive \
      --install-config \
      --install-es \
      --install-hook \
    && \
    # Cleanup
    apt-get remove -y \
      build-essential \
      git-core \
      wget \
    && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    truncate -s 0 /var/log/*log

COPY ./es-entrypoint.sh /es-entrypoint.sh

ENTRYPOINT [ "/es-entrypoint.sh" ]
CMD ["/usr/bin/supervisord"]

VOLUME [ "/var/lib/zmeventnotification/images", "/var/lib/zmeventnotification/known_faces", "/var/lib/zmeventnotification/unknown_faces" ]
EXPOSE 9000
{{- end -}}